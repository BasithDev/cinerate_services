apiVersion: apps/v1
kind: Deployment
metadata:
  name: cinerate-user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cinerate-user-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: cinerate-user-service
    spec:
      containers:
      - name: user-service
        image: basith1519/cinerate-user-service:v1.0.2
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: DB_HOST
          value: "user-postgres"
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: cinerate-config
              key: postgres-port
        - name: DB_NAME
          value: "cinerate_user_db"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: cinerate-user-service-svc
spec:
  type: NodePort
  selector:
    app: cinerate-user-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
